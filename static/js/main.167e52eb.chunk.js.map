{"version":3,"sources":["components/Input/CompletedTasks/CompletedTasks.module.scss","components/TaskList/TaskList.module.scss","components/TaskList/Task/Task.module.scss","components/Input/Input.module.scss","components/Input/ActiveTasks/ActiveTasks.js","components/Input/CompletedTasks/CompletedTasks.js","components/Input/Input.js","components/TaskList/Task/Task.js","components/TaskList/TaskList.js","App.js","index.js","App.module.scss","components/Input/ActiveTasks/ActiveTasks.module.scss"],"names":["module","exports","ActiveTasks","active","isCompleted","className","classes","Active","CompletedTasks","Complete","Input","inputText","setInputText","tasks","setTasks","setActive","inputFocus","useRef","useEffect","current","focus","Form","type","ref","value","title","onChange","e","target","ButtonGreen","onClick","preventDefault","id","uuid","trim","text","completed","prevActive","style","fontSize","ButtonRed","FilterTask","Task","task","setIsCompleted","TaskContainer","Completed","InCompleted","ButtonWrapper","completedTask","map","prevCompleted","transition","removedTask","filter","TaskList","TaskListContainer","autoHide","autoHideTimeout","autoHideDuration","height","width","App","useState","savedIsCompleted","localStorage","getItem","length","JSON","parse","savedActive","savedTasks","setItem","stringify","Title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.167e52eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Complete\":\"CompletedTasks_Complete__1AOoy\",\"CompletedTasks\":\"CompletedTasks_CompletedTasks__1UvvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskListContainer\":\"TaskList_TaskListContainer__100Pa\",\"TaskList\":\"TaskList_TaskList__1ER_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskContainer\":\"Task_TaskContainer__1B7gb\",\"Task\":\"Task_Task__3WSAH\",\"ButtonWrapper\":\"Task_ButtonWrapper__3WnYv\",\"ButtonGreen\":\"Task_ButtonGreen__3Ap3k\",\"ButtonRed\":\"Task_ButtonRed__HjxUA\",\"Completed\":\"Task_Completed__3Iudc\",\"InCompleted\":\"Task_InCompleted__2uHZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Input_Form__165sU\",\"Input\":\"Input_Input__3qBIm\",\"ButtonGreen\":\"Input_ButtonGreen__2dndn\",\"ButtonRed\":\"Input_ButtonRed__3D-Tn\",\"FilterTask\":\"Input_FilterTask__24wyd\"};","import React from 'react';\r\n\r\nimport classes from './ActiveTasks.module.scss';\r\n\r\nconst ActiveTasks = ({ active, isCompleted }) => {\r\n  return (\r\n    <div className={classes.Active}>\r\n      ACTIVE{' '}\r\n      <span className={classes.ActiveTasks}>\r\n        {active} / {active + isCompleted}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveTasks;\r\n","import React from 'react';\r\n\r\nimport classes from './CompletedTasks.module.scss';\r\n\r\nconst CompletedTasks = ({ active, isCompleted }) => {\r\n  return (\r\n    <div className={classes.Complete}>\r\n      COMPLETED{' '}\r\n      <span className={classes.CompletedTasks}>\r\n        {isCompleted} / {active + isCompleted}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompletedTasks;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport classes from './Input.module.scss';\r\nimport ActiveTasks from './ActiveTasks/ActiveTasks';\r\nimport CompletedTasks from './CompletedTasks/CompletedTasks';\r\n\r\nconst Input = ({\r\n  inputText,\r\n  setInputText,\r\n  tasks,\r\n  setTasks,\r\n  active,\r\n  setActive,\r\n  isCompleted,\r\n}) => {\r\n  const inputFocus = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputFocus.current.focus();\r\n  }, [inputText]);\r\n\r\n  const inputChangeHandler = e => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const clearInputHandler = () => {\r\n    setInputText('');\r\n  };\r\n\r\n  const addInputHandler = e => {\r\n    e.preventDefault();\r\n    const id = uuid();\r\n    if (inputText.trim() === '') return;\r\n    setTasks([...tasks, { text: inputText.trim(), id: id, completed: false }]);\r\n    setInputText('');\r\n    setActive(prevActive => prevActive + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.Form}>\r\n        <input\r\n          type=\"text\"\r\n          className={classes.Input}\r\n          ref={inputFocus}\r\n          value={inputText}\r\n          title=\"Add your task\"\r\n          onChange={inputChangeHandler}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className={classes.ButtonGreen}\r\n          onClick={addInputHandler}\r\n        >\r\n          <i className=\"fas fa-check\" style={{ fontSize: '2.3rem' }}></i>\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className={classes.ButtonRed}\r\n          onClick={clearInputHandler}\r\n        >\r\n          <i className=\"fas fa-times\" style={{ fontSize: '2.3rem' }}></i>\r\n        </button>\r\n      </form>\r\n      <div className={classes.FilterTask}>\r\n        <ActiveTasks active={active} isCompleted={isCompleted} />\r\n        <CompletedTasks active={active} isCompleted={isCompleted} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport classes from './Task.module.scss';\r\n\r\nconst Task = ({\r\n  tasks,\r\n  setTasks,\r\n  text,\r\n  id,\r\n  task,\r\n  active,\r\n  setActive,\r\n  setIsCompleted,\r\n}) => {\r\n  const removeTask = () => {\r\n    const removedTask = tasks.filter(task => {\r\n      return id !== task.id;\r\n    });\r\n    setTasks(removedTask);\r\n    if (active < 0) return;\r\n    if (task.completed) {\r\n      setIsCompleted(prevCompleted => prevCompleted - 1);\r\n    } else {\r\n      setActive(prevActive => prevActive - 1);\r\n    }\r\n  };\r\n\r\n  const completeTaskHandler = () => {\r\n    const completedTask = tasks.map(task => {\r\n      if (task.id === id) {\r\n        return {\r\n          ...task,\r\n          completed: !task.completed,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(completedTask);\r\n    if (task.completed) {\r\n      return (\r\n        setIsCompleted(prevCompleted => prevCompleted - 1),\r\n        setActive(prevActive => prevActive + 1)\r\n      );\r\n    } else {\r\n      return (\r\n        setIsCompleted(prevCompleted => prevCompleted + 1),\r\n        setActive(prevActive => prevActive - 1)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.TaskContainer} ${\r\n        task.completed ? classes.Completed : classes.InCompleted\r\n      }`}\r\n    >\r\n      <li className={classes.Task}>{text}</li>\r\n      <div className={classes.ButtonWrapper}>\r\n        <button\r\n          type=\"button\"\r\n          className={classes.ButtonGreen}\r\n          onClick={completeTaskHandler}\r\n        >\r\n          <i\r\n            className={`${\r\n              task.completed ? 'fas fa-backward' : 'fas fa-forward'\r\n            }`}\r\n            style={{ fontSize: '2rem', transition: '0.6s ease-in-out' }}\r\n          ></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={classes.ButtonRed}\r\n          onClick={removeTask}\r\n        >\r\n          <i className=\"fas fa-times\" style={{ fontSize: '2rem' }}></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport classes from './TaskList.module.scss';\r\nimport Task from './Task/Task';\r\n\r\nconst TaskList = ({\r\n  tasks,\r\n  setTasks,\r\n  active,\r\n  setActive,\r\n  isCompleted,\r\n  setIsCompleted,\r\n}) => {\r\n  return (\r\n    <div className={classes.TaskListContainer}>\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n        style={{\r\n          height: 420,\r\n          width: 700,\r\n        }}\r\n      >\r\n        <ul className={classes.TaskList}>\r\n          {tasks.map(task => (\r\n            <Task\r\n              key={task.id}\r\n              text={task.text}\r\n              id={task.id}\r\n              tasks={tasks}\r\n              setTasks={setTasks}\r\n              task={task}\r\n              active={active}\r\n              setActive={setActive}\r\n              isCompleted={isCompleted}\r\n              setIsCompleted={setIsCompleted}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport classes from './App.module.scss';\r\nimport Input from './components/Input/Input';\r\nimport TaskList from './components/TaskList/TaskList';\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [active, setActive] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const savedIsCompleted = localStorage.getItem('isCompleted');\r\n    setIsCompleted(\r\n      savedIsCompleted && savedIsCompleted.length > 0\r\n        ? JSON.parse(savedIsCompleted)\r\n        : []\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedActive = localStorage.getItem('active');\r\n    setActive(\r\n      savedActive && savedActive.length > 0 ? JSON.parse(savedActive) : []\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem('tasks'));\r\n    tasks && setTasks(savedTasks);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('active', JSON.stringify(active));\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('isCompleted', JSON.stringify(isCompleted));\r\n  }, [tasks, active, isCompleted]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.App}>\r\n        <h1 className={classes.Title}>Todo List</h1>\r\n      </div>\r\n      <Input\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        active={active}\r\n        setActive={setActive}\r\n        isCompleted={isCompleted}\r\n      />\r\n      <TaskList\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        active={active}\r\n        setActive={setActive}\r\n        isCompleted={isCompleted}\r\n        setIsCompleted={setIsCompleted}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.module.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3I-WH\",\"Title\":\"App_Title__17CFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Active\":\"ActiveTasks_Active__CUiTw\",\"ActiveTasks\":\"ActiveTasks_ActiveTasks__2m5Z8\"};"],"sourceRoot":""}